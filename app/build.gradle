plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'jacoco'
    id 'deploygate'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'org.jetbrains.kotlin.plugin.compose'
    id 'com.google.android.gms.oss-licenses-plugin'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

jacoco {
    toolVersion = "0.8.12"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn("createDebugCoverageReport")
    dependsOn("testDebugUnitTest")
    group = "testing"
    //無視するファイル(excludes)の設定を行います
    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      'android/**/*.*',
                      'androidx/**/*.*',
                      '**/Lambda$*.class',
                      '**/Lambda.class',
                      '**/*Lambda.class',
                      '**/*Lambda*.class',
                      '**/*Lambda*.*',
                      '**/*Builder.*'
    ]
    def javaDebugTree = fileTree(dir: "${layout.buildDirectory}/intermediates/javac/debug/classes", excludes: fileFilter)
    def kotlinDebugTree = fileTree(dir: "${layout.buildDirectory}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    getSourceDirectories().setFrom(files([mainSrc]))
    //Java, Kotlin混在ファイル対応
    getClassDirectories().setFrom(files([javaDebugTree, kotlinDebugTree]))
    getExecutionData().setFrom(fileTree(dir: project.projectDir, includes: [
            '**/*.exec',    //JUnit Test Result
            '**/*.ec']))     //Espresso Test Result
}

def mainVersionName = "1.5"
def getVersionCode = { ->
    return project.hasProperty('versionCode') ? versionCode.toInteger() : 1
}
def getVersionName = { ->
    return project.hasProperty('endOfVersionName') ? mainVersionName+"."+endOfVersionName : mainVersionName
}
android {
    compileSdk 34
    defaultConfig {
        applicationId "net.my.throwtrash"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode getVersionCode()
        versionName getVersionName()
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    signingConfigs {
        debug {
            if(project.rootProject.file("local.properties").exists()) {
                def properties = new Properties()
                properties.load(project.rootProject.file("local.properties").newDataInputStream())
                storeFile file(properties.getProperty("keystore.file"))
                storePassword properties.get("keystore.storepwd")
                keyAlias 'key0'
                keyPassword properties.get("keystore.keypwd")
            }
        }
        release {
            if(project.rootProject.file("local.properties").exists()) {
                def properties = new Properties()
                properties.load(project.rootProject.file("local.properties").newDataInputStream())
                storeFile file(properties.getProperty("keystore.file"))
                storePassword properties.get("keystore.storepwd")
                keyAlias 'key0'
                keyPassword properties.get("keystore.keypwd")
            }
        }
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            minifyEnabled true
        }
        debug {
            debuggable true
        }
    }
    flavorDimensions += 'mode'
    productFlavors {
        dev {
            dimension 'mode'
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.debug
        }
        prod {
            dimension 'mode'
            signingConfig signingConfigs.release
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests.all {
            useJUnitPlatform()
        }
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.6'
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    bundle {
        storeArchive {
            enable = false
        }
    }
    namespace 'net.mythrowaway.app'
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_17
        sourceCompatibility JavaVersion.VERSION_17
    }
}
// 設定は任意です
deploygate {
    // 認証情報を指定することができます
    appOwnerName = "quotto"
    apiToken = project.hasProperty('deploygateToken') ? deploygateToken : System.getenv("DEPLOYGATE_TOKEN")
}
dependencies {
    implementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    implementation 'androidx.compose.ui:ui-tooling-preview-android:1.6.8'
    implementation 'androidx.navigation:navigation-compose:2.7.7'
    implementation 'com.google.android.gms:play-services-pal:20.3.0'
    implementation 'androidx.compose.ui:ui-test-junit4-android:1.6.8'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.test.uiautomator:uiautomator:2.3.0'
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:3.0.2'
    testImplementation project(':app')
    androidTestImplementation platform('androidx.compose:compose-bom:2023.08.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    def lifecycle_version = '2.8.1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.drawerlayout:drawerlayout:1.2.0'
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.17.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'
    implementation 'com.github.kittinunf.fuel:fuel-json:2.3.1'
    implementation 'com.github.kittinunf.fuel:fuel-android:2.3.1'
    implementation 'com.google.android.play:review-ktx:2.0.1'
    implementation 'com.google.dagger:dagger:2.48'
    kapt 'com.google.dagger:dagger-compiler:2.48'

    // Jetpack Compose
    implementation 'androidx.activity:activity-compose:1.9.0'
    implementation platform('androidx.compose:compose-bom:2024.06.00')
    implementation 'androidx.compose.ui:ui:1.6.8'
    implementation 'androidx.compose.material3:material3:1.2.1'
    implementation 'androidx.compose.foundation:foundation:1.6.8'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    implementation 'androidx.compose.ui:ui-tooling-preview'

    implementation 'com.google.android.gms:play-services-oss-licenses:17.1.0'
    // https://mvnrepository.com/artifact/commons-net/commons-net
    implementation group: 'commons-net', name: 'commons-net', version: '20030805.205232'

    testImplementation "com.nhaarman:mockito-kotlin:1.6.0"
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.9.3'
    androidTestImplementation "com.nhaarman:mockito-kotlin:1.6.0"
    androidTestImplementation 'org.mockito:mockito-android:5.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestUtil 'androidx.test:orchestrator:1.4.2'

    // Firebase Crashlytics
    implementation platform('com.google.firebase:firebase-bom:33.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation "androidx.credentials:credentials:1.3.0"
    implementation "androidx.credentials:credentials-play-services-auth:1.3.0"
    implementation 'com.google.android.libraries.identity.googleid:googleid:1.1.1'
}
// androidUtilTestで使用するライブラリをダウンロードするための独自タスク
// androidTestUtilのライブラリをダウンロードするためには./gradlew connectedCheckの実行が必要だが、
// これにはデバイスかエミュレータが必要になるため、CIでの実行が困難になる。
// そのため、CIでの実行を容易にするために、androidTestUtilのライブラリをダウンロードするタスクを追加する。
// https://developer.android.com/training/testing/instrumented-tests/androidx-test-libraries/runner?hl=ja
task downloadAndroidUtilTestLibs(type: Copy) {
    from configurations.androidTestUtil
    into file("${project.projectDir}/build/tmp")
}